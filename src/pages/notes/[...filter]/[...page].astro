---
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import type { Page } from 'astro'
import { siteConfig } from '../../../config'
import Overview from '../../../components/Notes/Overview.astro'

export async function getStaticPaths({ paginate }) {
  const notes = (await getCollection('notes')).sort(
    (a, z) =>
      (z.data.pubDate?.valueOf() ?? 0) - (a.data.pubDate?.valueOf() ?? 0)
  )

  const categories = [...new Set(notes.flatMap((note) => note.data.category))]

  return [
    ...paginate(notes, {
      pageSize: siteConfig.pageSize,
      props: { categories },
    }),

    ...categories.flatMap((category) => {
      if (!category) return []
      return paginate(
        notes.filter((note) => note.data.category === category),
        {
          params: { filter: category },
          pageSize: siteConfig.pageSize,
          props: { category },
        }
      )
    }),
  ]
}

interface Props {
  page: Page<CollectionEntry<'notes'>>
  category: CollectionEntry<'notes'>['data']['category']
}

const { page, category } = Astro.props
---

<Overview notes={page.data} {page} {category} />
