---
import { render } from 'astro:content'
import getTitle from '../../utils/getTitle'
import formatDate from '../../utils/formatDate'
import Badge from '../../components/Badge.astro'
import type { CollectionEntry } from 'astro:content'
import PageLayout from '../../layouts/PageLayout.astro'
import FileListing from './FileListing.astro'

interface Props {
  note: CollectionEntry<'notes'>
}

const { note } = Astro.props
const { data } = note
const { Content } = await render(note)
---

<PageLayout title={getTitle(data.title)} description={data.description}>
  <div class="flex items-start">
    <aside
      class="basis-64 shrink-0 sticky top-20 mr-4 bg-base transition-all rounded-xl p-2"
    >
      <FileListing {note} />
    </aside>

    <article class="article base-card grow" data-pagefind-body>
      <h1 id={data.title}>{data.title}</h1>

      <div class="h-auto min-w-20">
        <img
          src={note.data.image
            ? note.data.image
            : '/images/exit-to-app-sharp-80.png'}
          alt={data.title}
          class="h-20 rounded-full"
        />
      </div>

      <a href={`/notes/${data.tag}`}>{data.tag}</a>:::{data.tags?.join(', ')}

      {
        data.pubDate && (
          <div class="flex space-x-4 not-prose">
            <Badge icon="material-symbols:edit-calendar-rounded">
              <time datetime={data.pubDate.toISOString()}>
                {formatDate(data.pubDate)}
              </time>
            </Badge>
          </div>
        )
      }

      <Content />
    </article>
  </div>
</PageLayout>
