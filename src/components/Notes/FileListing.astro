---
import type { CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'
import fetchFileList from '../../utils/fetchFileList.ts'
import type { File } from '../../utils/fetchFileList.ts'

interface Props {
  note: CollectionEntry<'notes'>
}

const { note } = Astro.props

let files: File[] = []
const fileListResponse = await fetchFileList(note.id)
if (fileListResponse && fileListResponse.status === 200) {
  files = (await fileListResponse.json()) ?? []

  // Remove index.md from the list
  files = files.filter((file) => file.name !== 'index.md')

  // Sort directories first
  files.sort((a, z) => (a.type === 'dir' && z.type !== 'dir' ? -1 : 1))
}
---

<ul>
  {
    files.map((file) => (
      <li>
        {/* Avoid adding a space before the file name */}
        {/* prettier-ignore */}
        <a class="px-2 hover:underline transition-all py-1 line-clamp-1" href={file.html_url} target="_blank">
          <Icon class="w-4 h-4 inline-block mr-2" name={
              file.type === 'dir'
                ? 'material-symbols:folder'
                : 'material-symbols:lab-profile-outline'
            } />{file.name}</a>
      </li>
    ))
  }
</ul>
