---
import type { CollectionEntry } from 'astro:content'
import fetchFileList from '../../utils/fetchFileList.ts'
import type { File } from '../../utils/fetchFileList.ts'
import FileListing from './FileListing.astro'
import { Icon } from 'astro-icon/components'

interface Props {
  noteId: CollectionEntry<'notes'>['id']
}

const { noteId } = Astro.props

let files: File[] = []
const fileListResponse = await fetchFileList(noteId)

if (fileListResponse && fileListResponse.status === 200) {
  files = (await fileListResponse.json()) ?? []

  // Remove index.md from the list
  files = files.filter((file) => file.name !== 'index.md')

  // Sort directories first
  files.sort((a, z) => (a.type === 'dir' && z.type !== 'dir' ? -1 : 1))
}
---

<span class="flex items-center gap-2 ml-2 mt-2 font-light">
  <Icon name="material-symbols:file-copy-rounded" class="w-6 h-6" />
  <p>EXPLORER</p>
</span>
{
  files.length > 0 ? (
    <FileListing {files} />
  ) : (
    <p class="p-2 text-sm italic">No files for this note</p>
  )
}
